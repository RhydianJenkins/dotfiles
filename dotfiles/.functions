#!/bin/bash

function extract() {
    if [ -f "$1" ] ; then
        case "$1" in
            *.tar.bz2)   tar xvjf "$1"     ;;
            *.tar.gz)    tar xvzf "$1"     ;;
            *.bz2)       bunzip2 "$1"      ;;
            *.rar)       unrar x "$1"      ;;
            *.gz)        gunzip "$1"       ;;
            *.tar)       tar xvf "$1"      ;;
            *.tbz2)      tar xvjf "$1"     ;;
            *.tgz)       tar xvzf "$1"     ;;
            *.zip)       unzip "$1"        ;;
            *.Z)         uncompress "$1"   ;;
            *.7z)        7z x "$1"         ;;
            *)           echo "'$1' cannot be extracted via >extract<" ;;
        esac
    else
        echo "'$1' is not a valid file!"
    fi
}

function maketar() { tar cvzf "${1%%/}.tar.gz"  "${1%%/}/"; }

function makezip() { zip -r "${1%%/}.zip" "$1" ; }

# Usage: `weather CITYNAME` or just `weather` to use your IP addr. location.
function weather() {
    curl http://wttr.in/"${1}"
}

# Confirm a question with the user.
# example: confirm "Are you sure?" && git reset --hard
confirm() {
    # not valid bash, but works in zsh. Uncomment first read to make compatible with bash.
    # read -r -p "${1:-Are you sure? [y/N]} " response
    read -r "response?${1:-Are you sure? [y/N]} "
    case "$response" in
        [yY][eE][sS]|[yY]) true;;
        *) false;;
    esac
}

function mstr() {
    local timestamp="$(date +%Y%m%d%H%M%S)"
    local argString="'$*'"
    local name=${${argString// /_}//\'}
    local suffix=".up.sql"
    local result="${timestamp}_${name}${suffix}"

    echo $result
    echo $result | xclip
}

function restore_databases() {
    if (! confirm); then
        return 1;
    fi

    bk

    if (type purge_databases &> /dev/null); then
        purge_databases
    fi

    echo "Executing make targets..."
    make migrate_all
    make install_templates
    make default_users
    make update_brand
    make connect_install_packages
    make fresh
    echo "Make targets executed"

    echo "Starting scaffolding..."
    docker compose exec mysql mysql -D basekit -e "$(cat $HOME/scaffold_basekit.sql)"
    echo "Scaffolding complete"
}

# load custom_functions file if exists
if [ -f ~/.custom_functions ]; then
    . ~/.custom_functions
fi
